#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define NUM 5

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp ESC>;

            combo_undo {
                timeout-ms = <50>;
                key-positions = <20 21>;
                bindings = <&kp LGUI(Z)>;
            };
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <31 35>;
        };

        navig {
            bindings = <&to 1>;
            key-positions = <20 33>;
        };

        default-layer {
            bindings = <&to 0>;
            key-positions = <20 30>;
        };

        system_layer {
            bindings = <&to 2>;
            key-positions = <20 34>;
        };

        function_layer {
            bindings = <&to 3>;
            key-positions = <20 31>;
        };
        num_layer {
            bindings = <&to 3>;
            key-positions = <20 32>;
        };

        navig2 {
            bindings = <&to 1>;
            key-positions = <29 33>;
        };

        default-layer2 {
            bindings = <&to 0>;
            key-positions = <29 30>;
        };

        system_layer2 {
            bindings = <&to 2>;
            key-positions = <29 34>;
        };

        function_layer2 {
            bindings = <&to 3>;
            key-positions = <29 31>;
        };
        
        num_layer2 {
            bindings = <&to 3>;
            key-positions = <29 32>;
        };
    };
};
öfvvüäjduaxaaudjctieoöäüvfTIEO
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp J         &kp D        &kp U       &kp A        &kp X      &kp P         &kp H        &kp L          &kp M        &kp W
&hm LSHIFT C  &hm LCTRL T  &hm LALT I  &hs LGUI E   &kp O      &kp B         &hs RGUI N   &hm RALT R     &hm RCTRL S  &hm RSHIFT G
&kp F         &kp V        &kp LBKT    &kp SQT      &kp SEMI   &kp Z         &kp Y        &kp MINUS      &kp Q        &kp K
                           &lt 0 TAB   &lt 3 SPACE  &lt 4 TAB  &lt 1 ESCAPE  &lt 2 ENTER  &kp BACKSPACE
            >;
        };

        nav_layer {
            bindings = <
&none   &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT                         &none   &none           &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN  &kp C_VOLUME_UP
&none   &none           &none             &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &none   &none           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &kp C_VOL_DN
&trans  &trans          &trans            &trans                             &none   &kp LG(LS(N4))  &kp LG(X)       &kp LG(C)       &kp LG(V)      &kp C_MUTE
                        &trans            &trans                             &trans  &trans          &trans          &trans
            >;
        };

        sym_layer {
            bindings = <
&kp LA(N3)  &kp LA(NUMBER_4)  &kp LA(N)         &kp LS(N5)  &kp LS(NUMBER_6)  &kp LS(EQUAL)        &kp LS(N0)     &kp LS(COMMA)     &kp LS(DOT)    &kp LS(BACKSLASH)
&kp CARET   &kp LS(N8)        &kp LS(N9)        &kp LA(N5)  &kp LA(NUMBER_6)  &kp LS(NUMBER_2)     &kp SLASH      &kp COMMA         &kp DOT        &kp NON_US_HASH
&kp LA(L)   &kp LESS_THAN     &kp GREATER_THAN  &kp LA(N8)  &kp LA(N9)        &kp LS(NON_US_HASH)  &kp LS(SLASH)  &kp LS(NUMBER_1)  &kp LS(MINUS)  &kp LA(E)
                              &trans            &trans      &trans            &trans               &trans         &trans
            >;
        };

        func_layer {
            bindings = <
&bootloader   &kp LS(PG_UP)  &kp LS(UP)    &kp LS(PG_DN)  &out OUT_TOG  &kp C_MUTE        &kp F7  &kp F8     &kp F9  &kp F10
&kp LS(HOME)  &kp LS(LEFT)   &kp LS(DOWN)  &kp LS(RIGHT)  &kp LS(END)   &kp K_VOL_UP      &kp F4  &kp F5     &kp F6  &kp F11
&bt BT_SEL 3  &bt BT_SEL 2   &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR    &kp K_VOL_DN      &kp F1  &kp F2     &kp F3  &kp F12
                             &out OUT_USB  &out OUT_BLE   &trans        &kp C_PLAY_PAUSE  &trans  &kp SPACE
            >;
        };

        num_layer {
            bindings = <
&trans             &trans     &trans                 &trans      &trans      &kp LS(N0)  &kp N7  &kp N8  &kp N9  &kp MINUS
&kp RIGHT_BRACKET  &kp SLASH  &kp LS(RIGHT_BRACKET)  &kp LS(N7)  &kp LS(N0)  &kp N0      &kp N4  &kp N5  &kp N6  &kp DOT
&trans             &trans     &trans                 &trans      &trans      &trans      &kp N1  &kp N2  &kp N3  &kp COMMA
                              &trans                 &trans      &trans      &trans      &trans  &trans
            >;
        };
    };
};
