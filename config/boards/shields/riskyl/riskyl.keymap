#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h> 
#include <dt-bindings/zmk/ext_power.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define NUM     4


&caps_word { continue-list = <UNDERSCORE MINUS>; };
&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <500>;     // 300
    delay-ms = <0>;                   // 0
};
&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <40>;      // 300
    delay-ms = <0>;                   // 0
};

/ {
    combos {
        compatible = "zmk,combos";

        delete {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp DEL>;
        };

        navig {
            bindings = <&to 1>;
            key-positions = <10 34>;
        };
        navig2 {
            bindings = <&to 1>;
            key-positions = <19 34>;
        };
        default-layer {
            bindings = <&to 0>;
            key-positions = <10 33>;
        };
        default-layer2 {
            bindings = <&to 0>;
            key-positions = <19 33>;
        };
        system_layer {
            bindings = <&to 2>;
            key-positions = <10 31>;
        };
        system_layer2 {
            bindings = <&to 2>;
            key-positions = <19 31>;
        };
        function_layer {
            bindings = <&to 3>;
            key-positions = <10 35>;
        };
        function_layer2 {
            bindings = <&to 3>;
            key-positions = <19 35>;
        };
        num_layer {
            bindings = <&to 3>;
            key-positions = <10 30>;
        };
        num_layer2 {
            bindings = <&to 3>;
            key-positions = <19 30>;
        };

    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp J         &kp D        &kp U       &kp A        &kp X      &kp P         &kp H        &kp L          &kp M        &kp W
&hs LSHIFT C    &hm LCTL T  &hm LALT I  &hs LGUI E      &kp O               &kp B           &hs RGUI N      &hm RALT R    &hm RCTL S  &hs RSHIFT G
&kp F           &lt NUM V   &kp LBKT    &kp SQT         &kp SEMI            &kp Z           &kp Y           &kp MINUS     &kp Q       &kp K
                           &lt NUM TAB   &lt SYM SPACE  &kp BACKSPACE   &kp ESCAPE   &lt NAV ENTER  &lt FUNC  ESCAPE
            >;
        };

        nav_layer {
            bindings = <
&none   &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT                         &none   &none           &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN  &kp C_VOLUME_UP
&msc MOVE_LEFT  &msc MOVE_DOWN  &msc MOVE_UP    &msc MOVE_RIGHT             &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS     &none           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &kp C_MUTE
&mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT                          &none   &kp LG(LS(N4))  &kp LG(X)       &kp LG(C)       &kp LG(V)      &kp C_VOL_DN
                        &trans            &trans                             &trans  &trans          &trans          &trans
            >;
        };
// &msc MOVE_LEFT  &msc MOVE_UP  &msc MOVE_DOWN     &msc MOVE_RIGHT
        sym_layer {
            bindings = <
&kp LA(N3)  &kp LA(NUMBER_4)  &kp LA(N)         &kp LS(N5)  &kp LS(NUMBER_6)  &kp LS(EQUAL)        &kp LS(N0)     &kp LS(COMMA)     &kp LS(DOT)    &kp LS(BACKSLASH)
&kp CARET   &kp LS(N8)        &kp LS(N9)        &kp LA(N5)  &kp LA(NUMBER_6)  &kp LS(NUMBER_2)     &kp SLASH      &kp COMMA         &kp DOT        &kp NON_US_HASH
&kp LA(L)   &kp GRAVE         &kp LS(GRAVE)  &kp LA(N8)  &kp LA(N9)        &kp LS(NON_US_HASH)  &kp LS(SLASH)  &kp LS(NUMBER_1)  &kp LS(MINUS)  &kp LA(E)
                              &trans            &trans      &trans            &trans               &trans         &trans
            >;
            display-name = "SYS";
        };

        func_layer {
            bindings = <
&bootloader   &kp LS(PG_UP)  &kp LS(UP)    &kp LS(PG_DN)  &out OUT_USB  &ext_power EP_ON        &kp F7  &kp F8     &kp F9  &kp F10
&kp LS(HOME)  &kp LS(LEFT)   &kp LS(DOWN)  &kp LS(RIGHT)  &out OUT_BLE   &ext_power EP_OFF      &kp F4  &kp F5     &kp F6  &kp F11
&sys_reset  &bt BT_SEL 2     &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR    &ext_power EP_TOG     &kp F1  &kp F2     &kp F3  &kp F12
                             &trans        &trans         &trans        &trans           &trans     &trans
            >;
        };

        num_layer {
            bindings = <
&trans             &trans     &trans                 &trans      &trans      &kp LS(N0)  &kp N7  &kp N8  &kp N9  &trans
&kp RIGHT_BRACKET  &kp SLASH  &kp LS(RIGHT_BRACKET)  &kp LS(N7)  &kp LS(N0)  &kp N0      &kp N4  &kp N5  &kp N6  &trans
&trans             &trans     &trans                 &trans      &trans     &trans      &kp N1  &kp N2  &kp N3  &trans
                              &trans                 &trans      &trans      &trans      &trans  &trans
            >;
        };
    };
};